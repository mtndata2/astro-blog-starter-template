---
import "../styles/global.css";

// Helper to get base URL in SSR, fallback to prod if local/dev
function getBaseUrl(Astro) {
  if (Astro.site) return Astro.site;
  if (Astro.request) return new URL(Astro.request.url).origin;
  return "https://astro-blog-starter-template.mtndatasales.workers.dev"; // fallback
}

// Get 30d history from API (you should create this API, or use static test data)
let history = [];
try {
  const baseUrl = getBaseUrl(Astro);
  const res = await fetch(`${baseUrl}/api/usd-ngn-history`);
  if (res.ok) {
    history = await res.json();
  }
} catch (e) {
  // Fallback demo data, oldest first:
  history = [
    { date: "2024-05-02", buy: 1490, sell: 1510 },
    { date: "2024-05-03", buy: 1500, sell: 1520 },
    { date: "2024-05-04", buy: 1510, sell: 1530 },
    { date: "2024-05-05", buy: 1495, sell: 1515 },
    { date: "2024-05-06", buy: 1510, sell: 1530 },
    { date: "2024-05-07", buy: 1515, sell: 1535 },
    { date: "2024-05-08", buy: 1508, sell: 1528 },
    // ... up to 30 items for real use
  ];
}

// Calculate 30d high/low
let buyHigh = Math.max(...history.map(h => h.buy ?? 0));
let buyLow = Math.min(...history.map(h => h.buy ?? Infinity));
let sellHigh = Math.max(...history.map(h => h.sell ?? 0));
let sellLow = Math.min(...history.map(h => h.sell ?? Infinity));

// Get the last 7 days for table
let last7 = history.slice(-7).reverse(); // newest first
---

<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <title>Dollar (USD) to Naira Black Market Rate - Last 30 Days</title>
    <meta name="description" content="See the latest USD to NGN black market exchange rates, graph, 30-day history, 7-day table, and all time high/low." />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  </head>
  <body>
    <section class="currency-page">
      <div class="currency-header">
        <span class="currency-flag">ðŸ‡ºðŸ‡¸</span>
        <h1>USD to NGN Black Market Rate</h1>
      </div>

      <div id="chart-container">
        <!--
          Here you can mount a React Chart component.
          Or use vanilla JS chart (Chart.js or Google Charts) on mount.
          Or just show a placeholder for now.
        -->
        <em style="color:#8ba390;">[Chart coming soon]</em>
      </div>

      <div class="stats-box">
        <div><b>30d High (Buy):</b> â‚¦{buyHigh}</div>
        <div><b>30d Low (Buy):</b> â‚¦{buyLow}</div>
        <div><b>30d High (Sell):</b> â‚¦{sellHigh}</div>
        <div><b>30d Low (Sell):</b> â‚¦{sellLow}</div>
      </div>

      <table class="history-table">
        <thead>
          <tr>
            <th>Date</th>
            <th>Buy</th>
            <th>Sell</th>
          </tr>
        </thead>
        <tbody>
          {last7.map(day => (
            <tr>
              <td>{day.date}</td>
              <td>â‚¦{day.buy ?? "N/A"}</td>
              <td>â‚¦{day.sell ?? "N/A"}</td>
            </tr>
          ))}
        </tbody>
      </table>
    </section>
  </body>
</html>
