---
import "../styles/global.css";

// Helper to get base URL in SSR, fallback to prod if local/dev
function getBaseUrl(Astro) {
  if (Astro.site) return Astro.site;
  if (Astro.request) return new URL(Astro.request.url).origin;
  return "https://astro-blog-starter-template.mtndatasales.workers.dev"; // fallback for deploy
}

// Get 30d history from API (live) or fallback test data
let history = [];
try {
  const baseUrl = getBaseUrl(Astro);
  const res = await fetch(`${baseUrl}/api/usd-ngn-history`);
  if (res.ok) {
    history = await res.json();
  }
} catch (e) {
  // fallback if API is unreachable
  history = [
    { date: "2024-05-25", buy: 1520, sell: 1538 },
    { date: "2024-05-26", buy: 1530, sell: 1545 },
    { date: "2024-05-27", buy: 1518, sell: 1530 },
    { date: "2024-05-28", buy: 1532, sell: 1540 },
    { date: "2024-05-29", buy: 1538, sell: 1552 },
    { date: "2024-05-30", buy: 1535, sell: 1548 },
    { date: "2024-05-31", buy: 1530, sell: 1542 },
    { date: "2024-06-01", buy: 1528, sell: 1540 },
    { date: "2024-06-02", buy: 1542, sell: 1555 },
    // ... up to 30 items
  ];
}

// Calculate 30d high/low
let buyHigh = Math.max(...history.map(h => h.buy ?? 0));
let buyLow = Math.min(...history.map(h => h.buy ?? Infinity));
let sellHigh = Math.max(...history.map(h => h.sell ?? 0));
let sellLow = Math.min(...history.map(h => h.sell ?? Infinity));

// Get the last 7 days for table (newest first)
let last7 = history.slice(-7).reverse();

// Today's and yesterday's rates for summary
const today = history.at(-1) || {};
const yesterday = history.at(-2) || {};
const todayDate = today.date
  ? new Date(
      today.date.length === 8
        ? today.date.slice(0, 4) + '-' + today.date.slice(4, 6) + '-' + today.date.slice(6)
        : today.date
    )
  : new Date();
const buyRate = today.buy ?? 'N/A';
const sellRate = today.sell ?? 'N/A';
const buyRateYesterday = yesterday.buy ?? null;

// Percent change
let percentChange = '';
if (buyRateYesterday && typeof buyRate === 'number') {
  const pct = ((buyRate - buyRateYesterday) / buyRateYesterday) * 100;
  percentChange = (pct > 0 ? 'â†‘' : 'â†“') + ' ' + Math.abs(pct).toFixed(2) + '%';
}

// Date format helper
function formatDate(dt) {
  return dt.toLocaleDateString('en-GB', { day: 'numeric', month: 'long', year: 'numeric' });
}
---

<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <title>Dollar (USD) to Naira Black Market Rate - Last 30 Days</title>
    <meta name="description" content="See the latest USD to NGN black market exchange rates, graph, 30-day history, 7-day table, and all time high/low." />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  </head>
  <body>
    <section class="currency-page">
      <div class="currency-header">
        <span class="currency-flag">ðŸ‡ºðŸ‡¸</span>
        <h1>USD to NGN Black Market Rate</h1>
      </div>

      <!-- Summary Box -->
      <div class="summary-box">
        <b>
          As of {formatDate(todayDate)}, the exchange rate for 1 US Dollar to Nigerian Naira is <span style="color:#166a39;">â‚¦{buyRate}</span>.
          Compared to yesterday, this represents a
          <span style={percentChange.startsWith('â†“') ? 'color:red;' : 'color:green;'}>{percentChange || 'â€”'}</span> in value.
        </b>
        <div style="margin-top:0.8em">
          If you're planning to buy <b>1 Dollar</b> at street value, the current rate would cost you approximately <span style="color:#166a39;"><b>â‚¦{buyRate}</b></span>.
        </div>
        <div style="margin-top:0.5em">
          Do you have 1 Dollar to sell now? Here is the rate to sell: <span style="color:#166a39;"><b>â‚¦{sellRate}</b></span> for USD.
        </div>
      </div>

      <!-- Chart placeholder -->
      <div id="chart-container" style="margin-bottom: 2em;">
        <em style="color:#8ba390;">[Chart coming soon]</em>
      </div>

      <!-- High/Low Stats -->
      <div class="stats-box">
        <div><b>30d High (Buy):</b> â‚¦{buyHigh}</div>
        <div><b>30d Low (Buy):</b> â‚¦{buyLow}</div>
        <div><b>30d High (Sell):</b> â‚¦{sellHigh}</div>
        <div><b>30d Low (Sell):</b> â‚¦{sellLow}</div>
      </div>

      <!-- Last 7 Days Table -->
      <table class="history-table">
        <thead>
          <tr>
            <th>Date</th>
            <th>Buy</th>
            <th>Sell</th>
          </tr>
        </thead>
        <tbody>
          {last7.map(day => (
            <tr>
              <td>{day.date?.length === 8
                ? day.date.slice(6, 8) + '-' + day.date.slice(4, 6) + '-' + day.date.slice(0, 4)
                : day.date ?? ''}</td>
              <td>â‚¦{day.buy ?? "N/A"}</td>
              <td>â‚¦{day.sell ?? "N/A"}</td>
            </tr>
          ))}
        </tbody>
      </table>
    </section>
  </body>
</html>
